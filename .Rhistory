METHOD = 'ucminf',
INIT = true_theta
)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = matrix(1,p,p+1), 'CORRFLAG'=1),
METHOD = 'ucminf',
INIT = true_theta
)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'ucminf',
INIT = true_theta
)
library(plCFA)
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'ucminf',
INIT = NULL
)
obj
get_Lam(obj$theta)
get_Lam(obj$theta, categories)
get_Lam(theta = obj$theta, c_vec=categories)
get_Lam(theta = obj$theta, c_vec=categories, A = constrMat)
PL_BFGS <- fit_pl(
manifest = manifest,
constraintMat = constrMat,
method = 'ucminf2',
corrFLAG = 1,
silent = F,
ncores = 1
)
PL_BFGS$loadings
get_Lam(theta = obj$theta, c_vec=categories, A = constrMat)
get_Sigma_u(theta = obj$theta, A = constrMat)
obj
library(plCFA)
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
library(plCFA)
st
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
library(plCFA)
library(plCFA)
###########
mod <- plCFA(
Y = manifest,
C_VEC = categories,
A = constrMat,
TAU = lambda0_init,
LAMBDA = lambda_init,
TRANSFORMED_RHOS = transformed_rhos_init,
CORRFLAG = 1,
SILENTFLAG = 1,
METHODFLAG = 0,
PAIRS_PER_ITERATION = 1,
PROB = 10/100,
ETA = 7,
BURN = 200,
MAXT = 1000,
TOLGRAD = 5e-3,
TOLPAR = 1e-5,
TOLOBJ = 1e-3,
TOLCOUNT = 10,
SEED = 123
)
###########
mod <- plCFA(
DATA = manifest,
C_VEC = categories,
CONSTRMAT = constrMat,
TAU = lambda0_init,
LAMBDA = lambda_init,
TRANSFORMED_RHOS = transformed_rhos_init,
CORRFLAG = 1,
SILENTFLAG = 1,
METHODFLAG = 0,
PAIRS_PER_ITERATION = 1,
PROB = 10/100,
ETA = 7,
BURN = 200,
MAXT = 1000,
TOLGRAD = 5e-3,
TOLPAR = 1e-5,
TOLOBJ = 1e-3,
TOLCOUNT = 10,
SEED = 123
)
mod
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
sum(categories)-p
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
library(plCFA)
########
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
INIT = NULL
)
obj$args
obj$fit
obj$args
########
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 7,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
obj$fit
obj$fit$path_av_theta
library(plCFA)
.packages()
.packages()
?.packages()
library(plyr)
?.packages()
(.packages())
library(plCFA)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
obj$clock
detach('RcppClock')
detach('package:RcppClock')
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
obj$clock
obj$fit$path_av_theta[nrow(obj$fit$path_av_theta),]
obj$fit$path_av_theta[nrow(obj$fit$path_av_theta)+1,]
obj$fit$path_av_theta[nrow(obj$fit$path_av_theta),]
library(plCFA)
library(plCFA)
cpp_ctrl <- list(
MAXT = 100,
BURN = 20,
ETA = 7,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
library(plCFA)
stepsize_tuning(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
STEPSIZE_GRID = 1:10,
INIT = NULL
)
library(plCFA)
stepsize_tuning(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
STEPSIZE_GRID = 1:10,
INIT = NULL
)
library(plCFA)
stepsize_tuning(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
STEPSIZE_GRID = 5:20,
INIT = NULL
)
obj$fit$path_av_theta[nrow(obj$fit$path_av_theta),]
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
########
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 7,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
mean((obj$theta-true_theta)^2)
mse7 <- mean((obj$theta-true_theta)^2)
########
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 14,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
mse14 <- mean((obj$theta-true_theta)^2)
mse7;mse14
true_theta
cpp_ctrl <- list(
MAXT = 200,
BURN = 100,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
stepsize_tuning(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
STEPSIZE_GRID = 5:20,
INIT = NULL
)
########
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 8,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
mse8 <- mean((obj$theta-true_theta)^2)
mse7;mse8
########
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 5,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
mean((obj$theta-true_theta)^2)
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 1,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
mean((obj$theta-true_theta)^2)
nll1 <- obj$fit$path_nll[length(obj$fit$path_nll)]
nll1
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 1,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
nll1 <- obj$fit$path_nll[length(obj$fit$path_nll)]
mse1 <- mean((obj$theta-true_theta)^2)
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 4,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
nll4 <- obj$fit$path_nll[length(obj$fit$path_nll)]
mse4 <- mean((obj$theta-true_theta)^2)
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 7,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
nll7 <- obj$fit$path_nll[length(obj$fit$path_nll)]
mse7 <- mean((obj$theta-true_theta)^2)
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 8,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
nll8 <- obj$fit$path_nll[length(obj$fit$path_nll)]
mse8 <- mean((obj$theta-true_theta)^2)
nll1; nll4; nll7; nll8
mse1; mse4; mse7; mse8
cpp_ctrl <- list(
MAXT = 200,
BURN = 100,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
stepsize_tuning(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
STEPSIZE_GRID = 1:20,
INIT = NULL
)
stepsize_tuning(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
STEPSIZE_GRID = seq(7,9,.1),
INIT = NULL
)
nll1; nll4; nll7; nll8
mse1; mse4; mse7; mse8
########
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 7.9,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
obj$fit$path_nll[length(obj$fit$path_nll)]
mean((obj$theta-true_theta)^2)
mean((fit$theta_init-true_theta)^2)
library(plCFA)
library(plCFA)
library(plCFA)
library(plCFA)
library(plCFA)
seed <- 1
set.seed(seed)
p <- 20; q <- 2; n <- 5000
constrMat <- build_constrMat(p,q,'simple')
true_load <- gen_loadings(FIXED = NULL, CONSTRAINT_MAT = constrMat, SEED = seed)
true_tau <- c(-1.2, 0, 1.2)
true_latent <- matrix(.7,q,q); diag(true_latent) <- 1
true_theta <- get_theta(rep(true_tau, p), true_load, true_latent, cat, constrMat, 0)
manifest <- gen_URV_data(n, true_load, true_tau, true_latent)
cpp_ctrl <- list(
MAXT = 200,
BURN = 100,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
stepsize_tuning(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
STEPSIZE_GRID = seq(7,9,.1),
INIT = NULL
)
stepsize_tuning(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
STEPSIZE_GRID = 1:10,
INIT = NULL
)
########
cpp_ctrl <- list(
MAXT = 1000,
BURN = 100,
ETA = 7.9,
PAIRS_PER_ITERATION = 10,
PROB = .1
)
obj <- fit_plCFA(
DATA_LIST = list('DATA' = manifest, 'CONSTRMAT' = constrMat, 'CORRFLAG'=1),
METHOD = 'st_hyper',
CPP_CONTROL = cpp_ctrl,
INIT = NULL
)
obj$fit$path_nll[length(obj$fit$path_nll)]
mean((obj$theta-true_theta)^2)
